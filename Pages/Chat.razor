@page "/chat"
@using blazorchat3.Data
@inject NavigationManager Navigation
@inject ChatService ChatService

<PageTitle>Chat</PageTitle>

@implements IDisposable

@if (string.IsNullOrWhiteSpace(UserName))
{
    <div class="mt-4">
        <h3>Zadejte své jméno:</h3>
        <input @bind="TempName" @bind:event="oninput" @onkeydown="OnEnter" placeholder="Vaše jméno" class="form-control" />
        <button class="btn btn-primary mt-2" @onclick="SetName">Přihlásit se</button>
    </div>
}
else
{
    <div class="chat-container d-flex flex-column">
        <div class="chat-header">
            <h4>Vítejte, @UserName!</h4>
            <button class="btn btn-link" @onclick="Logout">Změnit jméno</button>
        </div>
        <div class="chat-box border rounded p-2 mb-2 flex-grow-1 d-flex flex-column" style="background:#f8f9fa; overflow-y: auto; min-height: 200px;">
            @foreach (var msg in ChatService.Messages)
            {
                var isOwn = UserName == msg.User;
                <div class="d-flex mb-2 @(isOwn ? "justify-content-end" : "justify-content-start")">
                    <div class="chat-bubble @(isOwn ? "own" : "other")">
                        <div class="chat-username mb-1 @(isOwn ? "own" : "other")">@msg.User</div>
                        @if (IsEditing(msg))
                        {
                            <input class="form-control d-inline w-auto" style="max-width:60%" @bind="EditText" @bind:event="oninput" @onkeydown="(e) => OnEditKeyDown(e, msg)" />
                            <button class="btn btn-sm btn-success ms-1" @onclick="() => SaveEdit(msg)">Uložit</button>
                            <button class="btn btn-sm btn-secondary ms-1" @onclick="CancelEdit">Zrušit</button>
                        }
                        else
                        {
                            <span>@msg.Text</span>
                            @if (isOwn)
                            {
                                <button class="btn btn-sm btn-link ms-2 p-0" title="Upravit" @onclick="() => StartEdit(msg)">✏️</button>
                            }
                        }
                    </div>
                </div>
            }
        </div>
        <div class="input-group mt-auto mb-0">
            <input class="form-control" @bind="CurrentMessage" @bind:event="oninput" @onkeydown="OnMessageEnter" placeholder="Napište zprávu..." />
            <button class="btn btn-success" @onclick="SendMessage">Odeslat</button>
        </div>
    </div>
}

@code {
    private string? UserName;
    private string? TempName;
    private string? CurrentMessage;
    private ChatMessage? EditingMessage;
    private string? EditText;
    private bool IsEditing(ChatMessage msg) => EditingMessage == msg;

    private void StartEdit(ChatMessage msg)
    {
        EditingMessage = msg;
        EditText = msg.Text;
    }

    private void CancelEdit()
    {
        EditingMessage = null;
        EditText = null;
    }

    private void SaveEdit(ChatMessage msg)
    {
        if (EditingMessage == msg && EditText != null && EditText.Trim() != msg.Text)
        {
            ChatService.EditMessage(msg, EditText.Trim());
        }
        CancelEdit();
    }

    private void OnEditKeyDown(KeyboardEventArgs e, ChatMessage msg)
    {
        if (e.Key == "Enter")
        {
            SaveEdit(msg);
        }
        else if (e.Key == "Escape")
        {
            CancelEdit();
        }
    }

    protected override void OnInitialized()
    {
        ChatService.OnMessagesChanged += OnMessagesChanged;
    }

    private void OnMessagesChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ChatService.OnMessagesChanged -= OnMessagesChanged;
    }

    private void SetName()
    {
        if (!string.IsNullOrWhiteSpace(TempName))
        {
            UserName = TempName;
        }
    }

    private void Logout()
    {
        UserName = null;
        TempName = null;
    }

    private void SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(CurrentMessage) && !string.IsNullOrWhiteSpace(UserName))
        {
            ChatService.AddMessage(UserName, CurrentMessage);
            CurrentMessage = string.Empty;
        }
    }

    private void OnEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SetName();
        }
    }

    private void OnMessageEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SendMessage();
        }
    }
}
