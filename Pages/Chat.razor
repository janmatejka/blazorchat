@page "/chat"
@using blazorchat3.Data
@inject NavigationManager Navigation
@inject ChatService ChatService

<PageTitle>Chat</PageTitle>

@implements IDisposable

@if (string.IsNullOrWhiteSpace(UserName))
{
    <div class="mt-4">
        <h3>Zadejte své jméno:</h3>
        <input @bind="TempName" @bind:event="oninput" @onkeydown="OnEnter" placeholder="Vaše jméno" class="form-control" />
        <button class="btn btn-primary mt-2" @onclick="SetName">Přihlásit se</button>
    </div>
}
else
{
    <div class="mt-4">
        <h4>Vítejte, @UserName!</h4>
        <button class="btn btn-link" @onclick="Logout">Změnit jméno</button>
        <div class="chat-box border rounded p-2 mb-2" style="height:300px; overflow-y:auto; background:#f8f9fa;">
            @foreach (var msg in ChatService.Messages)
            {
                <div><b>@msg.User:</b> @msg.Text</div>
            }
        </div>
        <div class="input-group">
            <input class="form-control" @bind="CurrentMessage" @bind:event="oninput" @onkeydown="OnMessageEnter" placeholder="Napište zprávu..." />
            <button class="btn btn-success" @onclick="SendMessage">Odeslat</button>
        </div>
    </div>
}

@code {
    private string? UserName;
    private string? TempName;
    private string? CurrentMessage;

    protected override void OnInitialized()
    {
        ChatService.OnMessagesChanged += OnMessagesChanged;
    }

    private void OnMessagesChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ChatService.OnMessagesChanged -= OnMessagesChanged;
    }

    private void SetName()
    {
        if (!string.IsNullOrWhiteSpace(TempName))
        {
            UserName = TempName;
        }
    }

    private void Logout()
    {
        UserName = null;
        TempName = null;
    }

    private void SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(CurrentMessage) && !string.IsNullOrWhiteSpace(UserName))
        {
            ChatService.AddMessage(UserName, CurrentMessage);
            CurrentMessage = string.Empty;
        }
    }

    private void OnEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SetName();
        }
    }

    private void OnMessageEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SendMessage();
        }
    }
}
