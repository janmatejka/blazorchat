@page "/fetchdata"
@using blazorchat3.Data
@inject WeatherForecastService ForecastService
@implements IDisposable

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
    </thead>
    <tbody>
        @if (forecasts == null)
        {
            <tr>
                <td colspan="4"><em>Loading...</em></td>
            </tr>
        }
        else
        {
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private WeatherForecast[]? forecasts;

    protected override void OnInitialized()
    {
        ForecastService.OnForecastChanged += UpdateUI;
        LoadForecasts();
    }

    public void Dispose()
    {
        ForecastService.OnForecastChanged -= UpdateUI;
    }

    private void UpdateUI()
    {
        InvokeAsync(() =>
        {
            LoadForecasts();
            StateHasChanged();
        });
    }

    private async void LoadForecasts()
    {
        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    }
    
    protected override async Task OnInitializedAsync()
    {
        await Task.CompletedTask;
    }
}
